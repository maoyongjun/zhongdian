<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.dev.dao.material.DevMaterialDetailDao">
    
	<sql id="devMaterialDetailColumns">
		a.id AS "id",
		a.material_name AS "materialName",
		a.count AS "count",
		a.remarks AS "remarks",
		a.project_id AS "projectId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate"
	</sql>
	
	<sql id="devMaterialDetailJoins">
	</sql>
    
	<select id="get" resultType="DevMaterialDetail">
		SELECT 
			<include refid="devMaterialDetailColumns"/>
		FROM dev_material_detail a
		<include refid="devMaterialDetailJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="DevMaterialDetail">
		SELECT 
			<include refid="devMaterialDetailColumns"/>
		FROM dev_material_detail a
		<include refid="devMaterialDetailJoins"/>
		<where>
			1=1
			<if test="materialName != null and materialName != ''">
				AND a.material_name = #{materialName}
			</if>
			<if test="projectId != null and projectId != ''">
				AND(  a.project_id = #{projectId}

				OR	a.project_id IN (
				SELECT
				b.id
				FROM
				dev_material_project b
				WHERE
				b.parent_ids LIKE CONCAT( '%,', #{projectId}, ",%" ))
				)
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="DevMaterialDetail">
		SELECT 
			<include refid="devMaterialDetailColumns"/>
		FROM dev_material_detail a
		<include refid="devMaterialDetailJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO dev_material_detail(
			id,
			material_name,
			count,
			remarks,
			project_id,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{id},
			#{materialName},
			#{count},
			#{remarks},
			#{projectId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE dev_material_detail SET 	
			material_name = #{materialName},
			count = #{count},
			remarks = #{remarks},
			project_id = #{projectId},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM dev_material_detail
		WHERE id = #{id}
	</update>
	
</mapper>